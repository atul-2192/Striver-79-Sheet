 int largestRectangleArea(vector<int>& heights) {
        int n=heights.size();
        if(n==1) return heights[0];
        int maxArea=0;
        stack<int>st;
        for(int i=0;i<n;i++)
        {
            while(!st.empty()&&heights[st.top()]>heights[i])
            {
                int curr=st.top();
               
                st.pop();
                int prev=-1;
                if(!st.empty())
                {
                    prev=st.top();
                }
                int width= i-prev-1;
                maxArea=max(maxArea,heights[curr]*width);
            } 
            st.push(i);
        }
        int i=n;
        while(!st.empty()&&heights[st.top()]>0)
            {
                int curr=st.top();
               
                st.pop();
                 int prev=-1;
                if(!st.empty())
                {
                    prev=st.top();
                }
                int width= i-prev-1;
                maxArea=max(maxArea,heights[curr]*width);
            }
            return maxArea;
    }
